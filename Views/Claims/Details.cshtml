@model ClaimSystem.Models.Claim
@{
    ViewData["Title"] = "Claim #" + Model.Id;
}
<div class="d-flex gap-2 mb-3">

    @* Lecturer *@
    @if (User.IsInRole("Lecturer"))
    {
        if (Model.Status == ClaimStatus.Draft)
        {
            <form asp-action="SetStatus" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="status" value="@ClaimStatus.Submitted" />
                <button class="btn btn-primary"><i class="bi bi-send"></i> Submit</button>
            </form>
        }
        else if (Model.Status == ClaimStatus.Submitted)
        {
            <form asp-action="SetStatus" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="status" value="@ClaimStatus.Draft" />
                <button class="btn btn-outline-warning"><i class="bi bi-arrow-counterclockwise"></i> Reopen</button>
            </form>
        }
    }

    @* Coordinator recommendations *@
    @if (User.IsInRole("ProgrammeCoordinator"))
    {
        if (Model.Status == ClaimStatus.Submitted)
        {
            <form asp-action="SetStatus" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="status" value="@ClaimStatus.UnderReview" />
                <button class="btn btn-secondary"><i class="bi bi-eye"></i> Start Review</button>
            </form>
        }

        if (Model.Status == ClaimStatus.UnderReview || Model.Status == ClaimStatus.CoordinatorRejected)
        {
            <form asp-action="SetStatus" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="status" value="@ClaimStatus.CoordinatorApproved" />
                <button class="btn btn-success"><i class="bi bi-hand-thumbs-up"></i> Recommend Approve</button>
            </form>
        }

        if (Model.Status == ClaimStatus.UnderReview || Model.Status == ClaimStatus.CoordinatorApproved)
        {
            <form asp-action="SetStatus" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" name="status" value="@ClaimStatus.CoordinatorRejected" />
                <button class="btn btn-danger"><i class="bi bi-hand-thumbs-down"></i> Recommend Reject</button>
            </form>
        }
    }

    @* Manager final decision *@
    @if (User.IsInRole("AcademicManager") &&
        (Model.Status == ClaimStatus.UnderReview ||
        Model.Status == ClaimStatus.CoordinatorApproved ||
        Model.Status == ClaimStatus.CoordinatorRejected))
    {
        <form asp-action="SetStatus" method="post" class="d-inline">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@ClaimStatus.Approved" />
            <button class="btn btn-success"><i class="bi bi-check2-circle"></i> Approve (Final)</button>
        </form>

        <form asp-action="SetStatus" method="post" class="d-inline">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@ClaimStatus.Rejected" />
            <button class="btn btn-danger"><i class="bi bi-x-circle"></i> Reject (Final)</button>
        </form>
    }
    @if (User.IsInRole("AcademicManager"))
    {
        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger">
            <i class="bi bi-trash"></i> Delete
        </a>
    }
</div>

<div class="d-flex gap-2 mb-3">
    @if (Model.Status == ClaimStatus.Draft)
    {
        <form asp-action="SetStatus" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@ClaimStatus.Submitted" />
            <button class="btn btn-primary"><i class="bi bi-send"></i> Submit</button>
        </form>
    }
    else if (Model.Status == ClaimStatus.Submitted || Model.Status == ClaimStatus.UnderReview)
    {
        <form asp-action="SetStatus" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@ClaimStatus.Draft" />
            <button class="btn btn-outline-warning"><i class="bi bi-arrow-counterclockwise"></i> Reopen</button>
        </form>
    }
</div>
<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-0"><i class="bi bi-file-earmark-text me-2"></i>Claim @Model.Month/@Model.Year</h2>
    <div>@await Html.PartialAsync("_StatusBadge", Model.Status)</div>
</div>

<div class="row g-3">
    <div class="col-lg-8">
        <div class="card shadow-sm mb-3">
            <div class="card-header bg-light fw-semibold">Line Items</div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-sm align-middle mb-0">
                        <thead class="table-light">
                            <tr><th>Date</th><th class="text-end">Hours</th><th class="text-end">Rate</th><th class="text-end">Amount</th><th>Notes</th></tr>
                        </thead>
                        <tbody>
                            @foreach (var li in Model.LineItems.OrderBy(x => x.Date))
                            {
                                <tr>
                                    <td>@li.Date.ToShortDateString()</td>
                                    <td class="text-end">@li.Hours</td>
                                    <td class="text-end">R @li.RatePerHour.ToString("N2")</td>
                                    <td class="text-end">R @li.Amount.ToString("N2")</td>
                                    <td>@li.Notes</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot class="table-light">
                            <tr>
                                <th colspan="3" class="text-end">Total</th>
                                <th class="text-end">R @Model.TotalAmount.ToString("N2")</th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                    @if (Model.Status == ClaimStatus.Draft)
                    {
                        <div class="border-top p-3">
                            <form asp-action="AddLineItem" method="post" class="row g-2">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="claimId" value="@Model.Id" />

                                <div class="col-12 col-md-3">
                                    <label class="form-label">Date</label>
                                    <input class="form-control" type="date" name="item.Date" required />
                                </div>

                                <div class="col-6 col-md-2">
                                    <label class="form-label">Hours</label>
                                    <input class="form-control" type="number" step="0.25" min="0" max="24" name="item.Hours" required />
                                </div>

                                <div class="col-6 col-md-2">
                                    <label class="form-label">Rate</label>
                                    <input class="form-control" type="number" step="0.01" min="0" name="item.RatePerHour" required />
                                </div>

                                <div class="col-12 col-md-4">
                                    <label class="form-label">Notes</label>
                                    <input class="form-control" type="text" name="item.Notes" />
                                </div>

                                <div class="col-12 col-md-1 d-grid">
                                    <button class="btn btn-success mt-md-4">
                                        <i class="bi bi-plus-lg"></i>
                                    </button>
                                </div>
                            </form>
                        </div>
                    }

                </div>
            </div>
        </div>

        <div class="card shadow-sm">
            <div class="card-header bg-light fw-semibold">Upload Supporting Documents</div>
            <div class="card-body">
                <form asp-action="Upload" method="post" enctype="multipart/form-data" class="row g-2">
                    <input type="hidden" name="claimId" value="@Model.Id" />
                    <div class="col-md-8">
                        <input type="file" name="file" class="form-control" />
                        <small class="text-muted">Allowed: .pdf, .docx, .xlsx — 10MB max</small>
                    </div>
                    <div class="col-md-4 d-grid">
                        <button class="btn btn-outline-primary"><i class="bi bi-upload me-1"></i>Upload</button>
                    </div>
                </form>
                <hr />
                <div class="row row-cols-1 row-cols-md-2 g-2">
                    @foreach (var d in Model.Documents)
                    {
                        <div class="col">
                            <div class="border rounded p-2 d-flex align-items-center">
                                <i class="bi bi-file-earmark-text me-2 fs-4 text-primary"></i>
                                <div class="small">
                                    <a href="@d.StoragePath" target="_blank">@d.FileName</a><br />
                                    <span class="text-muted">@((d.SizeBytes / 1024.0).ToString("N0")) KB • @d.UploadedAt.ToLocalTime()</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card shadow-sm mb-3">
            <div class="card-header bg-light fw-semibold">Summary</div>
            <div class="card-body">
                <dl class="row mb-0">
                    <dt class="col-5">Lecturer</dt>
                    <dd class="col-7">@Model.LecturerName</dd>
                    <dt class="col-5">Module</dt>
                    <dd class="col-7">@Model.ModuleCode</dd>
                    <dt class="col-5">Period</dt>
                    <dd class="col-7">@Model.Month/@Model.Year</dd>
                </dl>
            </div>
        </div>

        <div class="card shadow-sm">
            <div class="card-header bg-light fw-semibold">Status Timeline</div>
            <div class="card-body">
                @if (ViewBag.StatusHistory is IEnumerable<ClaimSystem.Models.ClaimStatusHistory> hist && hist.Any())
                {
                    <ul class="timeline list-unstyled mb-0">
                        @foreach (var h in hist.OrderByDescending(x => x.ChangedAtUtc))
                        {
                            <li class="timeline-item">
                                <div class="timeline-dot bg-primary"></div>
                                <div class="timeline-content">
                                    <div class="fw-semibold">@await Html.PartialAsync("_StatusBadge", h.To)</div>
                                    <div class="small text-muted">@h.ChangedAtUtc.ToLocalTime() by @(h.ChangedBy ?? "-")</div>
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <div class="text-muted small">No history yet.</div>
                }
            </div>
        </div>
    </div>
</div>
